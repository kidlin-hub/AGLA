def gaussian_elimination(coefficients, constants):
    num_equations = len(constants)
    
    for pivot_index in range(num_equations):
        # Forward Elimination
        for row in range(pivot_index + 1, num_equations):
            factor = coefficients[row][pivot_index] // coefficients[pivot_index][pivot_index]
            for col in range(pivot_index, num_equations):
                coefficients[row][col] -= factor * coefficients[pivot_index][col]
            constants[row] -= factor * constants[pivot_index]
    
    # Back-substitution
    solutions = [0] * num_equations
    for row in range(num_equations - 1, -1, -1):
        solutions[row] = constants[row] // coefficients[row][row]
        for upper_row in range(row - 1, -1, -1):
            constants[upper_row] -= coefficients[upper_row][row] * solutions[row]
    
    return solutions

# Example usage
coefficients = [[2, 1], [1, 1]]
constants = [4, 2]
solution = gaussian_elimination(coefficients, constants)
print("Solution:", solution)
